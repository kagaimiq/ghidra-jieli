##################
#
# Load/Store
#
##################


###########################################################################################
# Load Word
###########################################################################################

#
# rA = [rB+reladdr7]
# <G> lw rA, reladdr7
#
:lw regAl, regBl, rel7 is group=3 & ins0707=0 & ins0303=0 & regAl & regBl & imm0812s
[ rel7 = (imm0812s << 2); ]
{
	local addr:4 = regBl + rel7;
	regAl = *:4 addr;
}

###########################################################################################
# Load Halfword (zero extend)
###########################################################################################

#
# rA = h[rB+reladdr6] (u)
# <G> lhz rA, reladdr6
#
:lhz regAl, regBl, rel6 is group=3 & ins0707=0 & ins0303=1 & regAl & regBl & imm0812s
[ rel6 = (imm0812s << 1); ]
{
	local addr:4 = regBl + rel6;
	regAl = zext(*:2 addr);
}

###########################################################################################
# Load Byte (zero extend)
###########################################################################################

#
# rA = b[rB+reladdr5] (u)
# <G> lbz rA, rB, reladdr5
#
:lbz regAl, regBl, imm0812s is group=2 & ins0707=0 & ins0303=1 & regAl & regBl & imm0812s
{
	local addr:4 = regBl + imm0812s;
	regAl = zext(*:1 addr);
}

###########################################################################################
# Store Word
###########################################################################################

#
# [rB+reladdr7] = rA
# <G> sw rA, reladdr7
#
:sw regAl, regBl, rel7 is group=3 & ins0707=1 & ins0303=0 & regAl & regBl & imm0812s
[ rel7 = (imm0812s << 2); ]
{
	local addr:4 = regBl + rel7;
	*:4 addr = regAl:4;
}

###########################################################################################
# Store halfword
###########################################################################################

#
# h[rB+reladdr7] = rA
# <G> sh rA, reladdr7
#
:sh regAl, regBl, rel6 is group=3 & ins0707=1 & ins0303=1 & regAl & regBl & imm0812s
[ rel6 = (imm0812s << 1); ]
{
	local addr:4 = regBl + rel6;
	*:2 addr = regAl:2;
}

###########################################################################################
# Store Byte
###########################################################################################

#
# b[rB+reladdr5] = rA
# <G> sb rA, rB, reladdr5
#
:sb regAl, regBl, imm0812s is group=2 & ins0707=1 & ins0303=1 & regAl & regBl & imm0812s
{
	local addr:4 = regBl + imm0812s;
	*:1 addr = regAl:1;
}
