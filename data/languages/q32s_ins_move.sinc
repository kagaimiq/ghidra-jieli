##################
#
# Move
#
##################

###########################################################################################
# Register move
###########################################################################################

#
# sp = usp
# => mov sp, usp
#
:mov sp, usp is group=0 & ins0012=0x003C & sp & usp
{
	sp = usp;
}

#
# sp = ssp
# => mov sp, ssp
#
:mov sp, ssp is group=0 & ins0012=0x003D & sp & ssp
{
	sp = ssp;
}

#
# usp = sp
# => mov usp, sp
#
:mov usp, sp is group=0 & ins0012=0x003E & sp & usp
{
	usp = sp;
}

#
# ssp = sp
# => mov ssp, sp
#
:mov ssp, sp is group=0 & ins0012=0x003F & sp & ssp
{
	ssp = sp;
}

#
# rA = rB
# => mov rA, rB
#
:mov regA, regB is group=0 & ins0812=0x8 & regA & regB
{
	regA = regB;
}

###########################################################################################
# Zero-extend byte
###########################################################################################

#
# rA = rB.b0 (u)
# => uxtb rA, rB
#
:uxtb regA, regCl is group=0 & ins0912=0x2 & ins0405=0 & regA & regCl
{
	regA = zext(regCl:1);
}

###########################################################################################
# Zero-extend halfword
###########################################################################################

#
# rA = rB.l (u)
# => uxth rA, rB
#
:uxth regA, regCl is group=0 & ins0912=0x2 & ins0405=2 & regA & regCl
{
	regA = zext(regCl:2);
}

###########################################################################################
# Sign-extend byte
###########################################################################################

#
# rA = rB.b0 (s)
# => sxtb rA, rB
#
:sxtb regA, regCl is group=0 & ins0912=0x2 & ins0405=1 & regA & regCl
{
	regA = sext(regCl:1);
}

###########################################################################################
# Sign-extend halfword
###########################################################################################

#
# rA = rB.l (s)
# => sxth rA, rB
#
:sxth regA, regCl is group=0 & ins0912=0x2 & ins0405=3 & regA & regCl
{
	regA = sext(regCl:2);
}
