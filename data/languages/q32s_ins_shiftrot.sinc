##################
#
# Shift/Rotate
#
##################

# TODO: if immediate shamt is 0 then it's 32

###########################################################################################
# Logical shift left
###########################################################################################

#
# rA <<= rB
# => lsl rA, rB
#
:lsl regA, regCl is group=0 & ins0912=0x6 & ins0405=0 & regA & regCl
{
	regA = regA << regCl;
}

#
# rA = rB << shamt
# => lsl rA, rB, shamt
#
:lsl regAl, regBl, imm0610 is group=6 & ins1112=0 & regAl & regBl & imm0610
{
	regAl = regBl << imm0610;
}


###########################################################################################
# Logical shift right
###########################################################################################

#
# rA >>= rB
# => lsr rA, rB
#
:lsr regA, regCl is group=0 & ins0912=0x6 & ins0405=2 & regA & regCl
{
	regA = regA >> regCl;
}

#
# rA = rB >> shamt
# => lsr rA, rB, shamt
#
:lsr regAl, regBl, imm0610 is group=6 & ins1112=2 & regAl & regBl & imm0610
{
	regAl = regBl >> imm0610;
}

###########################################################################################
# (Q) Arithmetic shift left
###########################################################################################

### TODO: overflow? ###

#
# rA <<<= rB
# => qasl rA, rB
#
:qasl regA, regCl is group=0 & ins0912=0x6 & ins0405=1 & regA & regCl
{
	regA = regA << regCl;
}

#
# rA = rB <<< shamt
# => qasl rA, rB, shamt
#
:qasl regAl, regBl, imm0610 is group=6 & ins1112=1 & regAl & regBl & imm0610
{
	regAl = regBl << imm0610;
}

###########################################################################################
# (Q) Arithmentic shift right
###########################################################################################

#
# rA >>>= rB
# => qasr rA, rB
#
:qasr regA, regCl is group=0 & ins0912=0x6 & ins0405=3 & regA & regCl
{
	regA = regA s>> regCl;
}

#
# rA = rB >>> shamt
# => qasr rA, rB, shamt
#
:qasr regAl, regBl, imm0610 is group=6 & ins1112=3 & regAl & regBl & imm0610
{
	regAl = regBl s>> imm0610;
}
