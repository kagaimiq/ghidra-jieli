##################
#
# Register field operations
#  .. or how do you call it correctly
#
##################

###########################################################################################
# Insert field
###########################################################################################

#
# rA <= insert(rB, p:pos5, l:len5)
# insert rA, rB, pos5, len5
#
:insert regE, regF, pos5, imm2428 is group=7 & ins0212=0x590 & imm0001 ; regE & regF & imm2428 & imm2931
[ pos5 = (imm0001 << 3) | imm2931; ]
{
	local mask:4 = (1 << imm2428) - 1;
	regE = (regE & ~(mask << pos5)) | ((regF & mask) << pos5);
}

###########################################################################################
# Extract field (zero-extended)
###########################################################################################

#
# rA = uextra(rB, p:pos5, l:len5)
# uextra rA, rB, pos5, len5
#
:uextra regE, regF, pos5, imm2428 is group=7 & ins0212=0x580 & imm0001 ; regE & regF & imm2428 & imm2931
[ pos5 = (imm0001 << 3) | imm2931; ]
{
	local mask:4 = (1 << imm2428) - 1;
	regE = (regF >> pos5) & mask;
}

###########################################################################################
# Extract field (sign-extended)
###########################################################################################

#
# rA = sextra(rB, p:pos5, l:len5)
# sextra rA, rB, pos5, len5
#
#:sextra regE, regF, pos5, imm2428 is group=7 & ins0212=0x5A0 & imm0001 ; regE & regF & imm2428 & imm2931
#[ pos5 = (imm0001 << 3) | imm2931; ]
#{
#}
