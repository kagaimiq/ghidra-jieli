############################################################################################
# Group 7 #
###########

#
# rA.l = imm16
# <G> movl rA, imm16
#
:movl regA, imm1631 is group=7 & ins0412=0x000 & regA ; imm1631
{
	regA[0,16] = imm1631;
}

#
# rA.h = imm16
# <G> movh rA, imm16
#
:movh regA, imm1631 is group=7 & ins0412=0x001 & regA ; imm1631
{
	regA[16,16] = imm1631;
}

#
# rA = imm16
# <G> movz rA, imm16
#
:movz regA, imm1631 is group=7 & ins0412=0x004 & regA ; imm1631
{
	regA = imm1631;
}

##########################################################################################

#
# call reladdr22
#
:call jaddr23 is (group=7 & ins0612=0x2A) ... & jaddr23
{
	call jaddr23;
}

#
# goto reladdr22
#
:goto jaddr23 is (group=7 & ins0612=0x2B) ... & jaddr23
{
	goto jaddr23;
}

##########################################################################################

#
# rA = imm32
# <G> mov rA, imm32
#
:mov regA, imm32 is group=7 & ins0412=0x1FC & regA ; imm1631 ; imm3247
[ imm32 = imm1631 | (imm3247 << 16); ]
{
	regA = imm32;
}

#
# srA = imm32
# <G> mov srA, imm32
#
:mov sregA, imm32 is group=7 & ins0412=0x1FE & sregA ; imm1631 ; imm3247
[ imm32 = imm1631 | (imm3247 << 16); ]
{
	sregA = imm32;
}
