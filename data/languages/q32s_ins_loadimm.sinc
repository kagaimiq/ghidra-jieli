##################
#
# Load Immediate
#
##################

###########################################################################################
# Sign-extended load
###########################################################################################

#
# rA = imm5        <- in range -32 .. -1
# => mov rA, #imm5
#
:mov regA, #imm5 is group=0 & ins0912=0x3 & regA & imm0408
[ imm5 = (-32) + imm0408; ]
{
	regA = imm5;
}

#
# rA = simm16
# => mov rA, #simm16
#
:mov regA, #imm1631s is group=7 & ins0412=0x1B0 & regA ; imm1631s
{
	regA = imm1631s;
}

###########################################################################################
# Zero-extended load
###########################################################################################

#
# rA = imm8
# => mov rA, #imm8
#
:mov regA, #imm0411 is group=3 & ins1212=1 & regA & imm0411
{
	regA = imm0411;
}

#
# rA = imm32
# => mov rA, #imm32
#
:mov regA, #imm32 is group=7 & ins0412=0x1FC & regA ; imm1631 ; imm3247
[ imm32 = imm1631 | (imm3247 << 16); ]
{
	regA = imm32;
}

#
# srA = imm32
# => mov srA, #imm32
#
:mov sregA, #imm32 is group=7 & ins0412=0x1FE & sregA ; imm1631 ; imm3247
[ imm32 = imm1631 | (imm3247 << 16); ]
{
	sregA = imm32;
}
